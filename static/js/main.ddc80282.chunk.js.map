{"version":3,"sources":["Sounds/click1.wav","Sounds/click2.wav","components/Metronome.jsx","App.js","index.js"],"names":["Metronome","props","useState","playing","setPlaying","count","setCount","bpm","setBpm","timer","useRef","click1sound","Audio","click1","click2sound","click2","playClick","play","prevCount","useEffect","clearInterval","current","setInterval","className","type","min","max","value","onChange","e","target","onClick","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uKAAe,G,KAAA,IAA0B,oCCA1B,MAA0B,mC,OC4E1BA,EArEG,SAAAC,GAAU,IAAD,EACOC,oBAAS,GADhB,mBAChBC,EADgB,KACPC,EADO,OAEGF,mBAAS,GAFZ,mBAEhBG,EAFgB,KAETC,EAFS,OAGDJ,mBAAS,KAHR,mBAGhBK,EAHgB,KAGXC,EAHW,KAIjBC,EAAQC,mBAERC,EAAc,IAAIC,MAAMC,GACxBC,EAAc,IAAIF,MAAMG,GAIxBC,EAAY,WACVX,EAPgB,IAOY,EAC5BS,EAAYG,OAEZN,EAAYM,OAEhBX,GAAS,SAAAY,GAAS,OAAKA,EAAY,GAZf,MAcxBC,qBAAU,WACFhB,GACAiB,cAAcX,EAAMY,SACpBZ,EAAMY,QAAUC,YAAYN,EAAY,GAAKT,EAAO,MAEpDa,cAAcX,EAAMY,WAEzB,CAACd,EAAKJ,EAASa,EAAWX,EAAOM,EAAaG,IAmBjD,OACI,sBAAKS,UAAU,YAAf,UACI,mDACA,uBACA,qBAAKA,UAAU,aAAf,SACI,qCACI,mCAAShB,EAAT,UACA,uBACIiB,KAAK,QACLC,IAAI,KACJC,IAAI,MACJC,MAAOpB,EACPqB,SApBI,SAAAC,GACpBrB,EAAOqB,EAAEC,OAAOH,OAEZxB,GACAG,EAAS,MAkBD,uBACA,wBAAQyB,QAhCN,WACV5B,EACAC,GAAW,IAEXE,EAAS,GACTF,GAAW,KA2BH,SACKD,EAAU,OAAS,mBCvD7B6B,EARH,WACR,OACI,8BACI,cAAC,EAAD,OCFZC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1BJ,IAASC,OAAO,cAAC,EAAD,IAASE,SAASC,eAAe,U","file":"static/js/main.ddc80282.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/click1.07cda4b8.wav\";","export default __webpack_public_path__ + \"static/media/click2.5b5930c4.wav\";","import React, { useState, useEffect, useRef } from 'react'\r\nimport \"../styles/Metronome.css\"\r\nimport click1 from \"../Sounds/click1.wav\"\r\nimport click2 from \"../Sounds/click2.wav\"\r\n\r\n\r\n\r\nconst Metronome = props => {\r\n    const [playing, setPlaying] = useState(false)\r\n    const [count, setCount] = useState(0)\r\n    const [bpm, setBpm] = useState(100)\r\n    const timer = useRef()\r\n    const beatsPerMeasure = 4\r\n    const click1sound = new Audio(click1)\r\n    const click2sound = new Audio(click2)\r\n\r\n\r\n\r\n    const playClick = () => {\r\n        if (count % beatsPerMeasure === 0) {\r\n            click2sound.play()\r\n        } else {\r\n            click1sound.play()\r\n        }\r\n        setCount(prevCount => (prevCount + 1) % beatsPerMeasure)\r\n    }\r\n    useEffect(() => {\r\n        if (playing) {\r\n            clearInterval(timer.current)\r\n            timer.current = setInterval(playClick, (40 / bpm) * 1000)\r\n        } else {\r\n            clearInterval(timer.current)\r\n        }\r\n    }, [bpm, playing, playClick, count, click1sound, click2sound])\r\n\r\n    const startStop = () => {\r\n        if (playing) {\r\n            setPlaying(false)\r\n        } else {\r\n            setCount(0)\r\n            setPlaying(true)\r\n        }\r\n    }\r\n\r\n    const handleBpmChange = e => {\r\n        setBpm(e.target.value)\r\n\r\n        if (playing) {\r\n            setCount(0)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"metronome\">\r\n            <h1>ReactJS Metronome</h1>\r\n            <br />\r\n            <div className=\"bpm-slider\">\r\n                <fieldset>\r\n                    <legend>{bpm} BPM</legend>\r\n                    <input\r\n                        type=\"range\"\r\n                        min=\"40\"\r\n                        max=\"200\"\r\n                        value={bpm}\r\n                        onChange={handleBpmChange}\r\n                    />\r\n                    <br />\r\n                    <button onClick={startStop}>\r\n                        {playing ? 'Stop' : 'Start'}\r\n                    </button>\r\n                </fieldset>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Metronome;","\r\nimport React from 'react'\r\nimport Metronome from './components/Metronome'\r\n    ;\r\n\r\nconst App = () => {\r\n    return (\r\n        <div>\r\n            <Metronome />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App;","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}